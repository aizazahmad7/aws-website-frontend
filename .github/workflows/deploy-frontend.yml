name: Deploy React Frontend

on:
  push:
    branches: [ main ]
    paths:
      - "myapp/**"
      - ".github/workflows/deploy-frontend.yml"

permissions:
  id-token: write   # required for OIDC
  contents: read

env:
  AWS_REGION: ap-southeast-2
  S3_BUCKET: aws-website-frontend-spa-207108709454
  DISTRIBUTION_ID: EUFRBR1ZVYT9K

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::207108709454:role/aws-website-frontend-github-deploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Node (LTS)
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: npm
          cache-dependency-path: myapp/package-lock.json

      - name: Install deps
        working-directory: myapp
        run: npm ci

      - name: Build
        working-directory: myapp
        run: npm run build

      # Upload assets with long cache (immutable)
      - name: Upload assets (long cache)
        run: |
          aws s3 cp myapp/build s3://$S3_BUCKET \
            --recursive \
            --exclude "index.html" \
            --cache-control "public,max-age=31536000,immutable"

      # Upload index.html with no-store to avoid stale HTML
      - name: Upload index.html (no cache)
        run: |
          aws s3 cp myapp/build/index.html s3://$S3_BUCKET/index.html \
            --cache-control "no-store, max-age=0" \
            --content-type "text/html" \
            --metadata-directive REPLACE

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "$DISTRIBUTION_ID" \
            --paths "/*"
